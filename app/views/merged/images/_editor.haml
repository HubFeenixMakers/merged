
%section.image
  .flex.justify-center
    = form_tag( merged.image_path , {method: :patch  } ) do
      %input{ hidden: true ,  id: :scale_id , name: :scale , "v-bind:value": "scale" }
      %button.mt-3.bg-cyan-200{class: button_classes , name: :type , value: 'scale'} Scale  {{scale}} %

    %div.justify-self-start.mx-20
      %b Scale {{scaled_x}} x {{scaled_y}}
      %br/
      %input{":min": 20 , ":max": 100 , ":step": 0.1 , :type => "range",
              "v-bind:value": "scale" , "v-on:input" => "handle_scale($event)"}/

    = form_tag( merged.image_path , {method: :patch  } ) do
      %input{ hidden: true ,  id: :width_id , name: :size_x , "v-bind:value": "size_x" }
      %input{ hidden: true ,  id: :height_id , name: :size_y , "v-bind:value": "size_y" }
      %input{ hidden: true ,  id: :off_x_id , name: :off_x , "v-bind:value": "off_x" }
      %input{ hidden: true ,  id: :off_y_id , name: :off_y , "v-bind:value": "off_y" }
      %button.mt-3.bg-cyan-200{class: button_classes , name: :type , value: 'resize'} Resize

    %label Ratio {{ratio}} : 1

  .flex.justify-between
    %div.justify-self-start
      %b Y Offset {{off_y}}
      %br/
      %input.horizontal{":min": 0 , ":max": "#{image.height}", ":step": 1 , :type => "range",
              "v-bind:value": "off_y" , "v-on:input" => "handle_off_y($event)"}/
    %div
      %b X Offset {{off_x}}
      %br/
      %input{":min": 0 , ":max": "#{image.width}", ":step": 1 , :type => "range",
              "v-bind:value": "off_x" , "v-on:input" => "handle_off_x($event)"}/

    %div
      %b X Size {{size_x}}
      %br/
      %input{":min": 0 , ":max": "#{image.width}", ":step": 1 , :type => "range",
              "v-bind:value": "size_x" , "v-on:input" => "handle_size_x($event)"}/
    %div.justify-self-end
      %b Y Size {{size_y}}
      %br/
      %input.horizontal{":min": 0 , ":max": "#{image.height}", ":step": 1 , :type => "range",
              "v-bind:value": "size_y" , "v-on:input" => "handle_size_y($event)"}/

  .flex.justify-center
    .image-container.overflow-hidden.relative{ "v-bind:style": "{height: scaled_y + 'px' , width: scaled_x + 'px'} " }
      = image_tag(image.asset_name , class: "")
      .absolute.bg-transparent.border-4.border-black{ "v-bind:style": "{height: size_y + 'px' , width: size_x + 'px' , top: off_y + 'px', left: off_x + 'px' }" }

:ruby2js
  class Images < Vue
    options el: '.image'
    def initialize
      @image_data = #{@image_data.to_json.html_safe}
      @off_x = 0
      @off_y = 0
      @scale = 100
      @initial_x = @image_data[:width]
      @initial_y = @image_data[:height]
      @size_x = @image_data[:width]
      @size_y = @image_data[:height]
    end
    def handle_size_x(event)
      value = event.target.value
      @size_x = value.to_f
    end
    def handle_size_y(event)
      value = event.target.value
      @size_y = value.to_f
    end
    def handle_off_y(event)
      value = event.target.value
      @off_y = value.to_f
    end
    def handle_off_x(event)
      value = event.target.value
      @off_x = value.to_f
    end
    def handle_scale(event)
      value = event.target.value
      @scale = value.to_f
    end

    def ratio
      ((@size_x / @size_y)*100).to_i / 100
    end
    def scaled_x
      (@initial_x * @scale / 100).to_i
    end
    def scaled_y
      (@initial_y * @scale / 100).to_i
    end
  end
